// npm run dev auto save

const { Telegraf, Markup, Context } = require("telegraf");
require("dotenv").config();

const bot = new Telegraf(process.env.BOT_TOKEN);

const baseDate = require("./const");


bot.start(async (ctx) => {
  ctx.reply(
    ` ${await ctx.replyWithPhoto({ source: "./img/AquapulseBot.png" })}
–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å ${ctx.message.from.first_name}`
      ? `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å ${ctx.message.from.first_name}.
–≠—Ç–æ—Ç —Ç–µ–ª–µ–≥—Ä–∞–º–º –±–æ—Ç, –ø–æ–¥—Å–∫–∞–∂–µ—Ç –≤–∞–º —Ü–µ–Ω—É –∏ –¥–∞—Å—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–µ.
–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –º–µ–Ω—é –≤ –Ω–∏–∂–Ω–µ–º –ª–µ–≤–æ–º —É–≥–ª—É –∏ –≤—ã–±–∏—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –∫–æ—Ç–æ—Ä–∞—è –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ '/' –∏ —Ç–∞–∫-–∂–µ –≤—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É.
–°–ø–∞—Å–∏–±–æ —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ Aquapulse üíº üíØ` 
      : –ö–ª–∏–µ–Ω—Ç
  );
});

bot.command("call", async (ctx) => {
  try {
    await ctx.replyWithHTML(`
–î–∏—Ä–µ–∫—Ç–æ—Ä -   +7(928)-136-37-08
-----------------------------------------
–ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º -  +7(903)-486-81-83
-----------------------------------------
–ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º - +7(922)-065-22-52
-----------------------------------------
–ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º - +7(961)-302-34-32`);
  } catch (e) {
    console.log(e);
  }
});

bot.command('view_product', async (ctx) => {
  try {
    
    await ctx.replyWithHTML('–ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç –¥–ª—è –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏—è —Å —Ç–æ–≤–∞—Ä–æ–º')
    await ctx.replyWithHTML('aquapulse.biz')
          
             
  } catch(e) {
    console.log(e)
  }
})




bot.command("route", async (ctx) => {
  try { 
    await ctx.replyWithHTML('–ù–µ–º–Ω–æ–≥–æ —Ç–µ—Ä–ø–µ–Ω–∏—è...')
    await ctx.replyWithHTML(
 `
‚û°  Google –∫–∞—Ä—Ç–∞ - https://example.com
     
‚û°  –Ø–Ω–¥–µ–∫—Å –∫–∞—Ä—Ç–∞ - https://yandex.ru/maps/-/CCUyy2gipD
     `

     
  )  
} catch (e) {
    console.log(e);
  }
});

bot.command("price_rub", async (ctx) => {
  try {
    await ctx.replyWithHTML('–ù–µ–º–Ω–æ–≥–æ —Ç–µ—Ä–ø–µ–Ω–∏—è...')
    await ctx.replyWithDocument(baseDate.datePrice.price_rub);
  } catch (e) {
    console.log(e);
  }
});


bot.command('create_bot', async (ctx) => {
  try {
    ctx.replyWithHTML( `
–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–æ–≤, –æ–±—Ä–∞—â–∞—Ç—å—Å—è:
phone: +7(961)-302-34-32
telegram: @nazim_053

    `)
  } catch (e) {
    console.log(e);
  }
})

// bot.command("price_usd", async (ctx) => {
//   try {
//     await ctx.replyWithDocument(baseDate.datePrice.price_usd);
//   } catch (e) {
//     console.log(e);
//   }
// });


// bot.help((ctx) => ctx.reply(text.commands))

// bot.hears('price', (ctx) => (
//     ctx.replyWithDocument( {source: './example.xlsx'})
// ))

// bot.hears('hi', (ctx) => (
//     ctx.replyWithPhoto({source: './img/ap1001.jpg'})
// ))

// bot.command('catalog', async (ctx) => {
//     try {
// await ctx.replyWithHTML('<b>Aquapulse</b>', Markup.inlineKeyboard(

//    [
//        [
//            Markup.button.callback('–®–ª–∞–Ω–≥–∏', 'btn_1'),
//            Markup.button.callback('–ü–∏—â–µ–≤—ã–µ —à–ª–∞–Ω–≥–∏', 'btn_2'),
//        ],

//        [
//            Markup.button.callback('–§—É—Ä–Ω–∏—Ç—É—Ä–∞', 'btn_3'),
//            Markup.button.callback('Lay-flat', 'btn_4')
//        ],
//        [
//            Markup.button.callback('–ì–æ—Ñ—Ä–∞', 'btn_4'),
//            Markup.button.callback('–°–ø—Ä–µ–π-–ª–µ–Ω—Ç–∞ —Ç—É–º–∞–Ω', 'btn_4')
//        ],
//    ]
//  ))
// } catch(e) {
//    console.error(e)
// }

// })

// function addActionBot (name) { // –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É btn_1
//     bot.action(name, async (ctx) => {
//        await ctx.answerCbQuery() // —É–±—Ä–∞—Ç—å —á–∞—Å–∏–∫–∏ —Å –∫–Ω–æ–ø–∫–∏
//        await ctx.replyWithHTML('<b>–í—ã–±–µ—Ä–∏—Ç–µ  –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ</b>', Markup.inlineKeyboard(

//            [
//                [
//                    Markup.button.callback(text.countreShlag[0], 'cointChla_1'),
//                    Markup.button.callback(text.countreShlag[1], 'cointChla_2'),
//                    Markup.button.callback(text.countreShlag[2], 'cointChla_3'),

//                ],
//            ]
//          ))
//     })
// }

// addActionBot('btn_1');

// function addCatalogFuritura(name) {
//     bot.action(name, async (ctx) => {
//         await ctx.answerCbQuery()

//         for( i = 0; i <= text.articul.length; i++ ) {

//             ctx.replyWithHTML( text.articul[i] )

//         }

//     })
// }

// addCatalogFuritura('btn_3');

// function addActionBot(name,src,text) {
//     bot.action(name, async (ctx) => {
//         try {
//            await ctx.answerCbQuery() // —É–±—Ä–∞—Ç—å —á–∞—Å–∏–∫–∏ —Å –∫–Ω–æ–ø–∫–∏
//            if (src !== false) {
//                await ctx.replyWithPhoto({
//                    source:src
//                })
//            }
//            await  ctx.replyWithHTML(text, {
//                 disable_web_page_preview:true // —ç—Ç–æ—Ç –º–µ—Ç–æ–¥ –∑–∞–ø—Ä–µ—â–∞–µ—Ç –≤—ã–≤–æ–¥–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏
//             })
//         } catch (e) {
//             console.log(e)
//         }
//     })
// }
// addActionBot('btn_3', './img/ap1001.jpg', text.articulFurnitura);

//bot.hears('hi', (ctx) => ctx.reply('Hey there')) —Å–ª—É—à–∞—Ç–µ–ª—å –≤—ã–≤–µ–¥—Ç reply
//  –ø–æ—Å–ª–µ –≤–≤–æ–¥–∞ hi

bot.launch();

// Enable graceful stop
process.once("SIGINT", () => bot.stop("SIGINT"));
process.once("SIGTERM", () => bot.stop("SIGTERM"));
